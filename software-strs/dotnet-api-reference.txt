.NET Framework API Reference version 4.7.2
Name	Description
Accessibility Namespace	The Accessibility and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.
Microsoft.Activities.Build Namespace	Classes related to workflow build tasks.
Microsoft.Activities.Build.Debugger Namespace	Classes related to the build debugger.
Microsoft.Activities.Build.Expressions Namespace	Classes related to build expressions.
Microsoft.Activities.Build.Validation Namespace	The Microsoft.Activities.Build.Validation provides classes related to build validation.
Microsoft.Build.BuildEngine Namespace	The Microsoft.Build.BuildEngine namespace represents the MSBuild engine. For information, see MSBuild.
Microsoft.Build.Construction Namespace	Contains types that the MSBuild object model uses to construct project roots with unevaluated values. Each project root corresponds to a project or targets file. For information, see MSBuild.
Microsoft.Build.Conversion Namespace	Contains types that Visual Studio uses to convert project files from an older version of Visual Studio.
Microsoft.Build.Debugging Namespace	Contains type for managing the debugger.
Microsoft.Build.Evaluation Namespace	Contains types that the MSBuild object model uses to evaluate projects. Each project is associated with one or more project roots. For information, see MSBuild.
Microsoft.Build.Exceptions Namespace	Contains exception types that may be thrown during the build process.
Microsoft.Build.Execution Namespace	Contains types that the MSBuild object model uses to build projects. For information, see MSBuild.
Microsoft.Build.Framework Namespace	The Microsoft.Build.Framework namespace contains the types that define how tasks and loggers interact with the MSBuild engine. For information, see MSBuild.
Microsoft.Build.Framework.XamlTypes Namespace	Classes used to represent XAML types parsed from files, rules, and other sources.
Microsoft.Build.Logging Namespace	Contains types used for logging the progress of a build. For information, see MSBuild.
Microsoft.Build.Tasks Namespace	The Microsoft.Build.Tasks namespace contains the implementation of all tasks shipping with MSBuild. For information, see MSBuild.
Microsoft.Build.Tasks.Deployment.Bootstrapper Namespace	The Microsoft.Build.Tasks.Deployment.Bootstrapper namespace contains classes used internally by MSBuild.
Microsoft.Build.Tasks.Deployment.ManifestUtilities Namespace	The Microsoft.Build.Tasks.Deployment.ManifestUtilities namespace contains classes that MSBuild uses.
Microsoft.Build.Tasks.Hosting Namespace	The Microsoft.Build.Tasks.Hosting namespace contains classes used internally by MSBuild.
Microsoft.Build.Tasks.Windows Namespace	The Microsoft.Build.Tasks.Windows namespace contains the implementation of all tasks shipping with MSBuild. The types in this namespace support the Windows Presentation Foundation (WPF) infrastructure and are not intended to be used directly from your code.
Microsoft.Build.Tasks.Xaml Namespace	Provides classes related to XAML build tasks.
Microsoft.Build.Utilities Namespace	The Microsoft.Build.Utilities namespace provides helper classes that you can use to create your own MSBuild loggers and tasks. For information, see MSBuild.
Microsoft.CSharp Namespace	The Microsoft.CSharp namespace contains classes that support compilation and code generation using the C# language.
Microsoft.CSharp.Activities Namespace	Classes related to C# activities.
Microsoft.CSharp.RuntimeBinder Namespace	The Microsoft.CSharp.RuntimeBinder namespace provides classes and interfaces that support interoperation between Dynamic Language Runtime and C#.
Microsoft.JScript Namespace	The Microsoft.JScript namespace contains classes that support compilation and code generation using the JScript language.
Microsoft.JScript.Vsa Namespace	The Microsoft.JScript.Vsa namespace contains interfaces that allow you to integrate Script for the.NET Framework script engines into JScript, and to compile and execute code at run time.
Microsoft.SqlServer.Server Namespace	The Microsoft.SqlServer.Server namespace contains classes, interfaces, and enumerations that are specific to the integration of the Microsoft .NET Framework common language runtime (CLR) into Microsoft SQL Server, and the SQL Server database engine process execution environment.
Microsoft.VisualBasic Namespace	The Microsoft.VisualBasic namespace contains types that support the Visual Basic Runtime in Visual Basic.
Microsoft.VisualBasic.Activities Namespace	Provides classes related to Visual Basic activities.h
Microsoft.VisualBasic.Activities.XamlIntegration Namespace	Provides classes related to Visual Basic XAML integration.
Microsoft.VisualBasic.ApplicationServices Namespace	The Microsoft.VisualBasic.ApplicationServices namespace contains types that support the Visual Basic Application Model and provide access to application information.
Microsoft.VisualBasic.Compatibility.VB6 Namespace	The Microsoft.VisualBasic.Compatibility.VB6 namespace contains functions and objects provided use by the tools for upgrading from Visual Basic 6.0 to Visual Basic 2008.
Microsoft.VisualBasic.CompilerServices Namespace	The Microsoft.VisualBasic.CompilerServices namespace contains internal-use only types that support the Visual Basic compiler.
Microsoft.VisualBasic.Devices Namespace	The Microsoft.VisualBasic.Devices namespace contains types that support the My objects related to devices in Visual Basic.
Microsoft.VisualBasic.FileIO Namespace	The Microsoft.VisualBasic.FileIO namespace contains types that support the My file system object in Visual Basic.
Microsoft.VisualBasic.Logging Namespace	The Microsoft.VisualBasic.Logging namespace contains types that support the My logging objects in Visual Basic and provides a simple log listener that directs logging output to file.
Microsoft.VisualBasic.MyServices Namespace	The Microsoft.VisualBasic.MyServices namespace contains types that support My in Visual Basic.
Microsoft.VisualBasic.MyServices.Internal Namespace	The Microsoft.VisualBasic.MyServices.Internal namespace contains internal-use only types that support My in Visual Basic.
Microsoft.VisualC Namespace	The Microsoft.VisualC namespace contains classes that support compilation and code generation using the C++ language.
Microsoft.VisualC.StlClr Namespace	Contains the classes, interfaces, and enumerators that are used to implement the STL/CLR Library.
Microsoft.VisualC.StlClr.Generic Namespace	Contains the classes, interfaces, and iterators that are used to implement the generic interface to the . By using this generic interface, other .NET languages, such as C# and Visual Basic, can call code that is written using STL/CLR.
Microsoft.Win32 Namespace	The Microsoft.Win32 namespace provides two types of classes: those that handle events raised by the operating system and those that manipulate the system registry.
Microsoft.Win32.SafeHandles Namespace	The Microsoft.Win32.SafeHandles namespace contains classes that are abstract derivations of safe handle classes that provide common functionality supporting file and operating system handles.
Microsoft.Windows.Input Namespace	Contains interfaces for preview commands in a Microsoft Ribbon for WPF control.
Microsoft.Windows.Themes Namespace	Provides exposure to the set of themes defined by Windows Presentation Foundation. In WPF, a theme is a set of resources, defined at the system level, which provide the default appearance for controls and other visual elements of an application. WPF themes are created using styles and include Luna, Aero, Royale, and Classic. Only the client area of a WPF application uses these themes; the appearance of the window border and buttons that form the window chrome is controlled by the Win32 theme service.
System Namespace	The System namespace contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.
System.Activities Namespace	Provides classes related to system activities.
System.Activities.Core.Presentation Namespace	Provides classes related to presentation.
System.Activities.Core.Presentation.Factories Namespace	Provides classes related to presentation factories.
System.Activities.Core.Presentation.Themes Namespace	Provides classes related to presentation themes.
System.Activities.Debugger Namespace	Provides classes related to the system debugger.
System.Activities.Debugger.Symbol Namespace	Provides classes related to debugger symbols.
System.Activities.DurableInstancing Namespace	Provides classes related to durable instancing.
System.Activities.DynamicUpdate Namespace	Provides classes related to dynamic updates.
System.Activities.ExpressionParser Namespace	Provides classes related to expression parsing.
System.Activities.Expressions Namespace	Provides classes related to expressions.
System.Activities.Hosting Namespace	Provides classes related to hosting.
System.Activities.Persistence Namespace	Provides classes related to persistence.
System.Activities.Presentation Namespace	Provides classes related to presentation.
System.Activities.Presentation.Annotations Namespace	Provides classes related to presentation annotations.
System.Activities.Presentation.Converters Namespace	Provides classes related to converters.
System.Activities.Presentation.Debug Namespace	Provides classes related to presentation debugging.
System.Activities.Presentation.Expressions Namespace	Provides classes related to expressions.
System.Activities.Presentation.Hosting Namespace	Provides classes related to hosting.
System.Activities.Presentation.Metadata Namespace	Provides classes related to presentation metadata.
System.Activities.Presentation.Model Namespace	Provides classes related to presentation model.
System.Activities.Presentation.PropertyEditing Namespace	Provides classes related to property editing.
System.Activities.Presentation.Services Namespace	Provides classes related to presentation services.
System.Activities.Presentation.Sqm Namespace	Provides classes related to SQM.
System.Activities.Presentation.Toolbox Namespace	Classes related to the presentation toolbox.
System.Activities.Presentation.Validation Namespace	Provides classes related to validation.
System.Activities.Presentation.View Namespace	Provides classes related to presentation views.
System.Activities.Presentation.View.OutlineView Namespace	Provides classes related to the outline view.
System.Activities.Presentation.ViewState Namespace	Provides classes related to view state data and management of view states.
System.Activities.Statements Namespace	Provides classes related to activity statements.
System.Activities.Statements.Tracking Namespace	Provides classes for monitoring state machine state executions and state transitions.
System.Activities.Tracking Namespace	The System.Activities.Tracking namespace contains classes used to create and interact with workflow tracking records. Tracking records are created by the workflow runtime when a workflow instance executes, and are accessed by classes that inherit from System.Activities.Tracking.TrackingParticipant.
System.Activities.Validation Namespace	Provides classes related to custom activity validation.
System.Activities.XamlIntegration Namespace	Contains classes that provide support for the serialization of activities into XAML.
System.AddIn Namespace	The System.AddIn namespace contains the System.AddIn.AddInAttribute attribute for identifying add-ins.
System.AddIn.Contract Namespace	The System.AddIn.Contract namespace contains interfaces and structures that provide the basis for communication between components that are updated independently.
System.AddIn.Contract.Automation Namespace	The System.AddIn.Contract.Automation namespace contains interfaces that components use to access type information and invoke type members.
System.AddIn.Contract.Collections Namespace	The System.AddIn.Contract.Collections namespace contains interfaces that define collections of System.AddIn.Contract.IContract and System.AddIn.Contract.RemoteArgument objects.
System.AddIn.Hosting Namespace	The System.AddIn.Hosting namespace provides classes for discovering, registering, activating, and controlling Add-Ins.
System.AddIn.Pipeline Namespace	The System.AddIn.Pipeline namespace provides classes for constructing the communication pipeline between a host application and an add-in.
System.CodeDom Namespace	The System.CodeDom namespace contains classes that can be used to represent the elements and structure of a source code document. The classes in this namespace can be used to model the structure of a source code document that can be output as source code in a supported language using the functionality provided by the System.CodeDom.Compiler namespace.
System.CodeDom.Compiler Namespace	The System.CodeDom.Compiler namespace contains types for managing the generation and compilation of source code in supported programming languages. Code generators can each produce source code in a particular programming language based on the structure of Code Document Object Model (CodeDOM) source code models consisting of elements provided by the System.CodeDom namespace.
System.Collections Namespace	The System.Collections namespace contains interfaces and classes that define various collections of objects, such as lists, queues, bit arrays, hash tables and dictionaries.
System.Collections.Concurrent Namespace	The System.Collections.Concurrent namespace provides several thread-safe collection classes that should be used in place of the corresponding types in the System.Collections and System.Collections.Generic namespaces whenever multiple threads are accessing the collection concurrently. However, members accessed through one of the interfaces the current collections implement, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.
System.Collections.Generic Namespace	The System.Collections.Generic namespace contains interfaces and classes that define generic collections, which allow users to create strongly typed collections that provide better type safety and performance than non-generic strongly typed collections.
System.Collections.ObjectModel Namespace	The System.Collections.ObjectModel namespace contains classes that can be used as collections in the object model of a reusable library. Use these classes when properties or methods return collections.
System.Collections.Specialized Namespace	The System.Collections.Specialized namespace contains specialized and strongly-typed collections; for example, a linked list dictionary, a bit vector, and collections that contain only strings.
System.ComponentModel Namespace	The System.ComponentModel namespace provides classes that are used to implement the run-time and design-time behavior of components and controls. This namespace includes the base classes and interfaces for implementing attributes and type converters, binding to data sources, and licensing components.
System.ComponentModel.Composition Namespace	This namespace provides classes that constitute the core of the Managed Extensibility Framework, or MEF.
System.ComponentModel.Composition.Hosting Namespace	The System.ComponentModel.Composition.Hosting namespace provides Managed Extensibility Framework (MEF) types that are useful to developers of extensible applications, or hosts.
System.ComponentModel.Composition.Primitives Namespace	This namespace provides the primitive types underlying the MEF programming model.
System.ComponentModel.Composition.ReflectionModel Namespace	The System.ComponentModel.Composition.ReflectionModel namespace provides Managed Extensibility Framework (MEF) types for developers who use a reflection-based programming model.
System.ComponentModel.Composition.Registration Namespace	The System.ComponentModel.Composition.Registration namespace contains types that enable rule-based configuration of Managed Extensibility Framework (MEF) parts.
System.ComponentModel.DataAnnotations Namespace	The System.ComponentModel.DataAnnotations namespace provides attribute classes that are used to define metadata for ASP.NET MVC and ASP.NET data controls.
System.ComponentModel.DataAnnotations.Schema Namespace	The System.ComponentModel.DataAnnotations.Schema namespace provides support for attribute classes that are used to define metadata for ASP.NET MVC and ASP.NET data controls.
System.ComponentModel.Design Namespace	The System.ComponentModel.Design namespace contains classes that developers can use to build custom design-time behavior for components and user interfaces for configuring components at design time. The design time environment provides systems that enable developers to arrange components and configure their properties. Some components may require specific design-time only behavior to function properly in a design time environment. It may also be valuable to provide custom user interfaces which assist developers in configuring components or the values of complex data types. The classes and interfaces defined within this namespace can be used to build design-time behavior for components, access design-time services, and implement customized design-time configuration interfaces.
System.ComponentModel.Design.Data Namespace	The System.ComponentModel.Design.Data namespace contains classes you can use to build custom design-time behavior for data-related components.
System.ComponentModel.Design.Serialization Namespace	The System.ComponentModel.Design.Serialization namespace provides types that support customization and control of serialization at design time.
System.Configuration Namespace	The System.Configuration namespace contains the types that provide the programming model for handling configuration data.
System.Configuration.Assemblies Namespace	The System.Configuration.Assemblies namespace contains classes that are used to configure an assembly.
System.Configuration.Install Namespace	The System.Configuration.Install namespace provides classes that allow you to write custom installers for your own components. The System.Configuration.Install.Installer class is the base class for all custom installers in the.NET Framework.
System.Configuration.Internal Namespace	The System.Configuration.Internal namespace contains configuration types that are intended for internal use only.
System.Configuration.Provider Namespace	The System.Configuration.Provider namespace contains the base classes shared by both server and client applications to support a pluggable model to easily add or remove functionality.
System.Data Namespace	The System.Data namespace provides access to classes that represent the ADO.NET architecture. ADO.NET lets you build components that efficiently manage data from multiple data sources.
System.Data.Common Namespace	The System.Data.Common namespace contains classes shared by the .NET Framework data providers.
System.Data.Common.CommandTrees Namespace	The System.Data.Common.CommandTrees namespace provides classes to build expressions that make up a command tree.
System.Data.Common.CommandTrees.ExpressionBuilder Namespace	The System.Data.Common.CommandTrees.ExpressionBuilder namespace provides a command tree API.
System.Data.Common.CommandTrees.ExpressionBuilder.Spatial Namespace	The System.Data.Common.CommandTrees.ExpressionBuilder.Spatial namespace contains a class that represent the Entity Data Model (EDM) functions of a spatial.
System.Data.Common.EntitySql Namespace	The System.Data.Common.EntitySql namespace includes the System.Data.Common.EntitySql.EntitySqlParser class and other support classes. These classes enable you to parse an Entity SQL query string and create a command tree query.
System.Data.Design Namespace	The System.Data.Design namespace contains classes that can be used to generate a custom typed-dataset.
System.Data.Entity.Design Namespace	The System.Data.Entity.Design namespace contains classes to generate Entity Data Model (EDM) files and object source code.
System.Data.Entity.Design.AspNet Namespace	The System.Data.Entity.Design.AspNet namespace contains the Entity Data Model (EDM) build providers for the ASP.NET build environment.
System.Data.Entity.Design.PluralizationServices Namespace	The System.Data.Entity.Design.PluralizationServices namespace provides classes for changing words from singular to plural form, and vice versa.
System.Data.EntityClient Namespace	The System.Data.EntityClient namespace is the .NET Framework Data Provider for the Entity Framework.
System.Data.Linq Namespace	The System.Data.Linq namespace contains classes that support interaction with relational databases in LINQ to SQL applications.
System.Data.Linq.Mapping Namespace	The System.Data.Linq.Mapping namespace contains classes that are used to generate a LINQ to SQL object model that represents the structure and content of a relational database.
System.Data.Linq.SqlClient Namespace	The System.Data.Linq.SqlClient namespace contains provider classes for communicating with SQL Server and classes that contain query helper methods.
System.Data.Linq.SqlClient.Implementation Namespace	The System.Data.Linq.SqlClient.Implementation namespace contains types that are used for the internal implementation details of a SQL Server provider.
System.Data.Mapping Namespace	The System.Data.Mapping namespace provides access to the System.Data.Mapping.MappingItemCollection and System.Data.Mapping.StorageMappingItemCollection classes.
System.Data.Metadata.Edm Namespace	The System.Data.Metadata.Edm namespace contains a set of types that represent concepts throughout the models used by the Entity Framework and a set of classes that help applications to work with metadata.
System.Data.Objects Namespace	The System.Data.Objects namespace includes classes that provide access to the core functionality of Object Services. These classes enable you to query, insert, update, and delete data by working with strongly typed CLR objects that are instances of entity types. Object Services supports both Language-Integrated Query (LINQ) and Entity SQL queries against types that are defined in an Entity Data Model (EDM). Object Services materializes the returned data as objects and propagates object changes back to the data source. It also provides facilities for tracking changes, binding objects to controls, and handling concurrency. For more information, see Object Services Overview (Entity Framework).
System.Data.Objects.DataClasses Namespace	The System.Data.Objects.DataClasses namespace includes classes that are base classes for types that are defined in an Entity Data Model (EDM), base classes for the types that are returned by navigation properties, and classes that define attributes that map common language runtime (CLR) objects to types in the conceptual model.
System.Data.Objects.SqlClient Namespace	The System.Data.Objects.SqlClient namespace provides the System.Data.Objects.SqlClient.SqlFunctions class, which contains common language runtime (CLR) methods that translate to database functions. Methods in the System.Data.Objects.SqlClient.SqlFunctions class can only be used in LINQ to Entities queries.
System.Data.Odbc Namespace	The System.Data.Odbc namespace is the .NET Framework Data Provider for ODBC.
System.Data.OleDb Namespace	The System.Data.OleDb namespace is the.NET Framework Data Provider for OLE DB.
System.Data.OracleClient Namespace	The System.Data.OracleClient namespace is the .NET Framework Data Provider for Oracle.
System.Data.Services Namespace	Provides access to classes used to build WCF Data Services.
System.Data.Services.BuildProvider Namespace	Classes in this namespace generate C# or Visual Basic code for a WCF Data Services client application based on the metadata returned by the data service.
System.Data.Services.Client Namespace	Represents the .NET Framework client library that applications can use to interact with WCF Data Services.
System.Data.Services.Common Namespace	Implements functionality common to both WCF Data Services client and server runtimes.
System.Data.Services.Configuration Namespace	This namespace provides configuration settings for WCF data services features.
System.Data.Services.Design Namespace	Used by the code generation command line tools and tools in Visual Studio to generate strongly-typed client side objects for communicating with data services.
System.Data.Services.Internal Namespace	This class is not for public use and is used internally by the system to implement support for queries with eager loading of related entities.
System.Data.Services.Providers Namespace	Provides a series of interfaces that are implemented to define a custom data service provider for WCF Data Services.
System.Data.Spatial Namespace	The System.Data.Spatial namespace that contains classes of spatial database functionality.
System.Data.Sql Namespace	The System.Data.Sql namespace contains classes that support SQL Server-specific functionality.
System.Data.SqlClient Namespace	The System.Data.SqlClient namespace is the .NET Data Provider for SQL Server.
System.Data.SqlTypes Namespace	The System.Data.SqlTypes namespace provides classes for native data types in SQL Server. These classes provide a safer, faster alternative to the data types provided by the .NET Framework common language runtime (CLR). Using the classes in this namespace helps prevent type conversion errors caused by loss of precision. Because other data types are converted to and from **SqlTypes** behind the scenes, explicitly creating and using objects within this namespace also yields faster code.
System.Deployment.Application Namespace	With the System.Deployment.Application namespace, you can program custom upgrade behavior into your ClickOnce application.
System.Deployment.Internal Namespace	The System.Deployment.Internal namespace contains helper classes for accessing the internal members of System.ActivationContext and System.ApplicationIdentity objects.
System.Deployment.Internal.CodeSigning Namespace	The System.Deployment.Internal.CodeSigning namespace contains classes for processing digital signatures.
System.Device.Location Namespace	The System.Device.Location namespace allows application developers to easily access the computer's location by using a single API. Location information may come from multiple providers, such as GPS, Wi-Fi triangulation, and cell phone tower triangulation. The System.Device.Location classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them. As a result, application developers who use this API do not need to tailor applications to specific hardware configurations.
System.Diagnostics Namespace	The System.Diagnostics namespace provides classes that allow you to interact with system processes, event logs, and performance counters.
System.Diagnostics.CodeAnalysis Namespace	The System.Diagnostics.CodeAnalysis namespace contains classes for interaction with code analysis tools. These tools are used to analyze code for conformance to coding conventions such as naming or security rules.
System.Diagnostics.Contracts Namespace	The System.Diagnostics.Contracts namespace contains static classes for representing program contracts such as preconditions, postconditions, and invariants.
System.Diagnostics.Contracts.Internal Namespace	The System.Diagnostics.Contracts.Internal namespace provides classes that the binary rewriter can use to handle a contract failure.
System.Diagnostics.Design Namespace	The System.Diagnostics.Design namespace contains classes that can be used to extend design-time support for application monitoring and instrumentation.
System.Diagnostics.Eventing Namespace	Contains the classes used to instrument your application. The instrumentation, when enabled, logs the event data to the Event Tracing for Windows (ETW) tracing subsystem. For a complete description of ETW, see Event Tracing for Windows.aspx).
System.Diagnostics.Eventing.Reader Namespace	Using the System.Diagnostics.Eventing.Reader namespace, you can develop applications that read and manage event logs. An event in an event log contains information, a warning, or an error that has been published by a specific application, service, or operating system component. These events are read by applications that monitor a computer's health and applications that take action when specific events occur. For more information, see [Technology Summary for Reading and Managing Event Logs](https://msdn.microsoft.com/library/bb671205.aspx) and [Event Log Scenarios](https://msdn.microsoft.com/library/bb671204.aspx).
System.Diagnostics.PerformanceData Namespace	Use the classes in this namespace to provide counter data. The counters are used to expose performance metrics to consumers such as the Performance Monitor. The namespace does not contain classes for consuming the counter data. For a complete description of the performance counters architecture, see Performance Counters.aspx).
System.Diagnostics.SymbolStore Namespace	The System.Diagnostics.SymbolStore namespace provides classes that allow you to read and write debug symbol information, such as source line to Microsoft intermediate language (MSIL) maps. Compilers targeting the.NET Framework can store the debug symbol information into programmer's database (PDB) files. Debuggers and code profiler tools can read the debug symbol information at run time.
System.Diagnostics.Tracing Namespace	The System.Diagnostics.Tracing namespace provides types and members that enable you to create strongly typed events to be captured by event tracing for Windows (ETW).
System.DirectoryServices Namespace	The System.DirectoryServices namespace provides easy access to Active Directory Domain Services from managed code. The namespace contains two component classes, System.DirectoryServices.DirectoryEntry and System.DirectoryServices.DirectorySearcher, which use the Active Directory Services Interfaces (ADSI) technology. ADSI is the set of interfaces that Microsoft provides as a flexible tool for working with a variety of network providers. ADSI gives the administrator the ability to locate and manage resources on a network with relative ease, regardless of the size of the network.
System.DirectoryServices.AccountManagement Namespace	The System.DirectoryServices.AccountManagement namespace provides uniform access and manipulation of user, computer, and group security principals across the multiple principal stores: Active Directory Domain Services (AD DS), Active Directory Lightweight Directory Services (AD LDS), and Machine SAM (MSAM). System.DirectoryServices.AccountManagement manages directory objects independent of the System.DirectoryServices namespace.
System.DirectoryServices.ActiveDirectory Namespace	The System.DirectoryServices.ActiveDirectory namespace provides a high level abstraction object model that builds around Microsoft Active Directory services tasks. The Active Directory service concepts such as forest, domain, site, subnet, partition, and schema are part of the object model.
System.DirectoryServices.Protocols Namespace	The System.DirectoryServices.Protocols namespace provides the methods defined in the Lightweight Directory Access Protocol (LDAP) version 3 (V3) and Directory Services Markup Language (DSML) version 2.0 (V2) standards.
System.Drawing Namespace	The System.Drawing namespace provides access to GDI+ basic graphics functionality. More advanced functionality is provided in the System.Drawing.Drawing2D, System.Drawing.Imaging, and System.Drawing.Text namespaces.
System.Drawing.Configuration Namespace	The System.Drawing.Configuration namespace contains a class that supports configuration for classes in the System.Drawing namespace.
System.Drawing.Design Namespace	The System.Drawing.Design namespace contains classes that extend design-time user interface (UI) logic and drawing.
System.Drawing.Drawing2D Namespace	The System.Drawing.Drawing2D namespace provides advanced two-dimensional and vector graphics functionality.
System.Drawing.Imaging Namespace	The System.Drawing.Imaging namespace provides advanced GDI+ imaging functionality. Basic graphics functionality is provided by the System.Drawing namespace.
System.Drawing.Printing Namespace	The System.Drawing.Printing namespace provides print-related services for Windows Forms applications.
System.Drawing.Text Namespace	The System.Drawing.Text namespace provides advanced GDI+ typography functionality.
System.Dynamic Namespace	The System.Dynamic namespace provides classes and interfaces that support Dynamic Language Runtime.
System.EnterpriseServices Namespace	The System.EnterpriseServices namespace provides an important infrastructure for enterprise applications. COM+ provides a services architecture for component programming models deployed in an enterprise environment. This namespace provides .NET objects with access to COM+ services making the .NET Framework objects more practical for enterprise applications.
System.EnterpriseServices.CompensatingResourceManager Namespace	The System.EnterpriseServices.CompensatingResourceManager namespace provides classes that allow you to use a Compensating Resource Manager (CRM) in managed code. A CRM is a service provided by COM+ that enables you to include non transactional objects in Microsoft Distributed Transaction Coordinator (DTC) transactions. Although CRMs do not provide the capabilities of a full resource manager, they do provide transactional atomicity (all or nothing behavior) and durability through the recovery log.
System.EnterpriseServices.Internal Namespace	The System.EnterpriseServices.Internal namespace provides infrastructure support for COM+ services. The classes and interfaces in this namespace are specifically intended to support calls into System.EnterpriseServices from the unmanaged COM+ classes.
System.Globalization Namespace	The System.Globalization namespace contains classes that define culture-related information, including language, country/region, calendars in use, format patterns for dates, currency, and numbers, and sort order for strings. These classes are useful for writing globalized (internationalized) applications. Classes such as System.Globalization.StringInfo and System.Globalization.TextInfo provide advanced globalization functionalities, including surrogate support and text element processing.
System.IO Namespace	The System.IO namespace contains types that allow reading and writing to files and data streams, and types that provide basic file and directory support.
System.IO.Compression Namespace	The System.IO.Compression namespace contains classes that provide basic compression and decompression services for streams.
System.IO.IsolatedStorage Namespace	The System.IO.IsolatedStorage namespace contains types that allow the creation and use of isolated stores. With these stores, you can read and write data that less trusted code cannot access and prevent the exposure of sensitive information that can be saved elsewhere on the file system. Data is stored in compartments that are isolated by the current user and by the assembly in which the code exists. Additionally, data can be isolated by domain. Roaming profiles can be used in conjunction with isolated storage so isolated stores will travel with the user's profile. The System.IO.IsolatedStorage.IsolatedStorageScope enumeration indicates different types of isolation. For more information about when to use isolated storage, see [Isolated Storage](~/docs/standard/io/isolated-storage.md).
System.IO.Log Namespace	The System.IO.Log namespace defines an interface for logging to a record-oriented sequential I/O system.
System.IO.MemoryMappedFiles Namespace	The System.IO.MemoryMappedFiles namespace provides classes for using a memory-mapped file, which maps the contents of a file to an applications logical address space.
System.IO.Packaging Namespace	Provides classes that support storage of multiple data objects in a single container.
System.IO.Pipes Namespace	The System.IO.Pipes namespace contains types that provide a means for interprocess communication through anonymous and/or named pipes.
System.IO.Ports Namespace	The System.IO.Ports namespace contains classes for controlling serial ports. The most important class, System.IO.Ports.SerialPort, provides a framework for synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties. It can be used to wrap System.IO.Stream objects, allowing the serial port to be accessed by classes that use streams.
System.IdentityModel Namespace	The System.IdentityModel namespace contains classes that are used to build security token services (STS). These include the System.IdentityModel.SecurityTokenService and System.IdentityModel.Scope classes, as well as exception several utility classes that provide the ability to perform cookie transforms.
System.IdentityModel.Claims Namespace	The System.IdentityModel.Claims namespace contains classes that implement the Windows Communication Foundation (WCF) claims-based identity authorization model. This model includes the System.IdentityModel.Claims.Claim class and the System.IdentityModel.Claims.ClaimSet class. Beginning with .NET Framework 4.5 and the integration of Windows Identity Foundation (WIF) into the .NET Framework, the WCF claims-based identity model has been superseded by WIF. WIF provides a claims-based identity object model that can be used to provide authentication and authorization across several Microsoft product stacks, including the CLR, WCF, and ASP.NET. The WIF classes that represent claims, claim types, and identities and principals that are based on claims are contained in the System.Security.Claims namespace. Beginning with .NET 4.5, these classes should be used instead of those in the System.IdentityModel.Claims namespace.
System.IdentityModel.Configuration Namespace	The System.IdentityModel.Configuration namespace contains classes that provide configuration for applications and services built using the Windows Identity Foundation (WIF). The classes in this namespace represent settings under the [<identityConfiguration>](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element. Classes that configure federation using the WS-Federation protocol are contained primarily in the System.IdentityModel.Services.Configuration namespace. These settings appear under the [<system.identityModel.services>](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel-services.md) element in a configuration file.
System.IdentityModel.Metadata Namespace	The System.IdentityModel.Metadata namespace contains classes that represent elements in a Federation Metadata document. A Federation Metadata document is an XML document that provides information that may be useful to partners when establishing a federation. For more information about federation metadata, see section three of the following specification: Web Services Federation Language (WS-Federation) Version 1.2 (http://go.microsoft.com/fwlink/?LinkID=210152).
System.IdentityModel.Policy Namespace	The System.IdentityModel.Policy namespace contains classes that are used to implement authorization policy when using the WCF claims-based identity model. Beginning with .NET Framework 4.5 and the integration of Windows Identity Foundation (WIF) into the .NET Framework, the WCF claims-based identity model has been superseded by WIF. WIF provides a claims-based identity object model that can be used to provide authentication and authorization across several Microsoft product stacks, including the CLR, WCF, and ASP.NET. In WIF, authorization policy is implemented by extending the System.Security.Claims.ClaimsAuthorizationManager class. Beginning with .NET 4.5, authorization policy should be implemented by using WIF instead of the classes in the System.IdentityModel.Claims namespace.
System.IdentityModel.Protocols.WSTrust Namespace	The System.IdentityModel.Protocols.WSTrust namespace contains classes that represent WS-Trust artifacts. These include the System.IdentityModel.Protocols.WSTrust.RequestSecurityToken (RST) and System.IdentityModel.Protocols.WSTrust.RequestSecurityToken (RSTR) classes and several serializers that can serialize and deserialize between WS-Trust artifacts on the wire and their representation in the object model. Out-of-the-box, Windows Identity Foundation (WIF) contains support for the following WS-Trust specifications: WS-Trust February 2005, WS-Trust 1.3, or WS-Trust 1.4.
System.IdentityModel.Selectors Namespace	The System.IdentityModel.Selectors namespace contains classes that implement authentication in the Windows Communication Foundation (WCF) claims-based identity model. Beginning with .NET Framework 4.5 and the integration of Windows Identity Foundation (WIF) into the .NET Framework, the WCF claims-based identity model has been superseded by WIF. WIF provides a claims-based identity object model that can be used to provide authentication and authorization across several Microsoft product stacks, including the CLR, WCF, and ASP.NET. The WIF classes that represent security tokens and that are used to process security tokens are contained in the System.IdentityModel.Tokens namespace; for example, System.IdentityModel.Tokens.SecurityToken and System.IdentityModel.Tokens.SecurityTokenHandler. Beginning with .NET 4.5, the classes in the System.IdentityModel.Tokens namespace should be used instead of those in the System.IdentityModel.Selectors namespace.
System.IdentityModel.Services Namespace	The System.IdentityModel.Services namespace primarily contains classes that are used in applications built using Windows Identity Foundation (WIF) that perform federated authentication with the WS-Federation protocol. It contains the HTTP Modules, System.IdentityModel.Services.WSFederationAuthenticationModule (WSFAM) and System.IdentityModel.Services.SessionAuthenticationModule (SAM), as well as classes that support their operation. The WSFAM provides handling for the WS-Federation sign-in and sign-out sequences and the SAM provides session management by maintaining and handling cookies. The namespace also contains classes that represent WS-Federation messages (System.IdentityModel.Services.WSFederationMessage), such as sign-in (System.IdentityModel.Services.SignInRequestMessage, System.IdentityModel.Services.SignInResponseMessage) and sign-out messages (System.IdentityModel.Services.SignOutRequestMessage), as well as serializers that serialize and deserialize between the object model and the on-the-wire representations of these messages.
System.IdentityModel.Services.Configuration Namespace	The System.IdentityModel.Services.Configuration namespace contains classes that provide configuration for Windows Identity Foundation (WIF) applications that use the WS-Federation protocol. The classes in this namespace represent settings under the [<system.identityModel.services>](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel-services.md) element. The System.IdentityModel.Services namespace also contains some of the classes that are used to configure WS-Federation. Classes that configure other service and application settings, such as security token handlers, are contained primarily in the System.IdentityModel.Configuration namespace. These settings appear under the [<identityConfiguration>](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element in a configuration file.
System.IdentityModel.Services.Tokens Namespace	The System.IdentityModel.Services.Tokens contains the System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler class and the System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler class.
System.IdentityModel.Tokens Namespace	The System.IdentityModel.Tokens namespace contains classes that represent security tokens, security token handlers, key identifier clauses and other artifacts used in token generation and processing. The namespace contains base classes such as System.IdentityModel.Tokens.SecurityToken, System.IdentityModel.Tokens.SecurityTokenHandler, and System.IdentityModel.Tokens.SecurityKeyIdentifierClause, as well as classes that derive from these classes and represent several of the token types, artifacts, and handlers for which the Windows Identity Foundation (WIF) has built in support. This includes classes that contain support for SAML v1.1 and v2.0 tokens, such as: System.IdentityModel.Tokens.SamlSecurityToken, System.IdentityModel.Tokens.SamlSecurityTokenHandler, System.IdentityModel.Tokens.Saml2SecurityToken, and System.IdentityModel.Tokens.Saml2SecurityTokenHandler.
System.Linq Namespace	The System.Linq namespace provides classes and interfaces that support queries that use Language-Integrated Query (LINQ).
System.Linq.Expressions Namespace	The System.Linq.Expressions namespace contains classes, interfaces and enumerations that enable language-level code expressions to be represented as objects in the form of expression trees.
System.Management Namespace	Provides access to a rich set of management information and management events about the system, devices, and applications instrumented to the Windows Management Instrumentation (WMI) infrastructure. Applications and services can query for interesting management information (such as how much free space is left on the disk, what is the current CPU utilization, which database a certain application is connected to, and much more), using classes derived from System.Management.ManagementObjectSearcher and System.Management.ManagementQuery, or subscribe to a variety of management events using the System.Management.ManagementEventWatcher class. The accessible data can be from both managed and unmanaged components in the distributed environment.
System.Management.Instrumentation Namespace	Provides the classes necessary for instrumenting applications for management and exposing their management information and events through WMI to potential consumers. Consumers such as Microsoft Application Center or Microsoft Operations Manager can then manage your application easily, and monitoring and configuring of your application is available for administrator scripts or other applications, both managed as well as unmanaged. Instrumentation of your application is easy to achieve using the InstrumentationClass custom attribute on classes you wish to expose, or using the provided System.Management.Instrumentation.BaseEvent and System.Management.Instrumentation.Instance base classes and the System.Management.Instrumentation.Instrumentation helper class.
System.Media Namespace	The System.Media namespace contains classes for playing sound files and accessing sounds provided by the system.
System.Messaging Namespace	The System.Messaging namespace provides classes that allow you to connect to, monitor, and administer message queues on the network and send, receive, or peek messages.
System.Messaging.Design Namespace	The System.Messaging.Design namespace contains classes that can be used to extend design-time support for System.Messaging classes.
System.Net Namespace	The System.Net namespace provides a simple programming interface for many of the protocols used on networks today. The System.Net.WebRequest and System.Net.WebResponse classes form the basis of what are called pluggable protocols, an implementation of network services that enables you to develop applications that use Internet resources without worrying about the specific details of the individual protocols. Classes in the System.Net namespace can be used to develop Windows Store apps or desktop apps. When used in a Windows Store app, classes in the System.Net namespace are affected by network isolation feature, part of the application security model used by the Windows Developer Preview. The appropriate network capabilities must be enabled in the app manifest for a Windows Store app for the system to allow network access by a Windows Store app. For more information, see the [Network Isolation for Windows Store Apps](~/docs/framework/network-programming/network-isolation-for-windows-store-apps.md).
System.Net.Cache Namespace	The System.Net.Cache namespace defines the types and enumerations used to define cache policies for resources obtained using the System.Net.WebRequest and System.Net.HttpWebRequest classes.
System.Net.Configuration Namespace	The System.Net.Configuration namespace contains classes that applications use to programmatically access and update configuration settings for the System.Net namespaces.
System.Net.Http Namespace	The System.Net.Http namespace provides a programming interface for modern HTTP applications.
System.Net.Http.Headers Namespace	Provides support for collections of HTTP headers used by the System.Net.Http namespace
System.Net.Mail Namespace	The System.Net.Mail namespace contains classes used to send electronic mail to a Simple Mail Transfer Protocol (SMTP) server for delivery.
System.Net.Mime Namespace	The System.Net.Mime namespace holds types that are used to represent Multipurpose Internet Mail Exchange (MIME) headers. These types are used with the types in the System.Net.Mail namespace to specify Content-Type, Content-Disposition and Content-transfer-Encoding headers when using the System.Net.Mail.SmtpClient class to send email.
System.Net.NetworkInformation Namespace	The System.Net.NetworkInformation namespace provides access to network traffic data, network address information, and notification of address changes for the local computer. The namespace also contains classes that implement the Ping utility. You can use System.Net.NetworkInformation.Ping and related classes to check whether a computer is reachable across the network.
System.Net.PeerToPeer Namespace	The System.Net.PeerToPeer namespace provides access to peer networking functionality.
System.Net.PeerToPeer.Collaboration Namespace	The System.Net.PeerToPeer.Collaboration namespace enhances System.Net.PeerToPeer networking functionality and provides capabilities for serverless managed collaboration sessions.
System.Net.Security Namespace	The System.Net.Security namespace provides network streams for secure communications between hosts.
System.Net.Sockets Namespace	The System.Net.Sockets namespace provides a managed implementation of the Windows Sockets (Winsock) interface for developers who need to tightly control access to the network.
System.Net.WebSockets Namespace	The System.Net.WebSockets namespace provides a managed implementation of the WebSocket interface for developers.
System.Numerics Namespace	The System.Numerics namespace contains numeric types that complement the numeric primitives, such as System.Byte, System.Double, and System.Int32, that are defined by .NET.
System.Printing Namespace	Provides classes that enable you to automate the management of print servers, print queues, and print jobs.
System.Printing.IndexedProperties Namespace	Provides classes that enable rapidly copying the property settings of a print system object to another object of the same type. Also, enables iteration through the properties of print system objects and the discovery of their types at run time, without using reflection.
System.Printing.Interop Namespace	Provides interconversion of managed System.Printing.PrintTicket objects and unmanaged Graphics Device Interface (GDI) DEVMODE structures.
System.Reflection Namespace	The System.Reflection namespace contains types that retrieve information about assemblies, modules, members, parameters, and other entities in managed code by examining their metadata. These types also can be used to manipulate instances of loaded types, for example to hook up events or to invoke methods. To dynamically create types, use the System.Reflection.Emit namespace.
System.Reflection.Context Namespace	The System.Reflection.Context namespace contains classes that enable customized reflection contexts.
System.Reflection.Emit Namespace	The System.Reflection.Emit namespace contains classes that allow a compiler or tool to emit metadata and Microsoft intermediate language (MSIL) and optionally generate a PE file on disk. The primary clients of these classes are script engines and compilers.
System.Resources Namespace	The System.Resources namespace provides classes and interfaces that allow developers to create, store, and manage various culture-specific resources used in an application. One of the most important classes of the System.Resources namespace is the System.Resources.ResourceManager class.
System.Resources.Tools Namespace	The System.Resources.Tools namespace contains the System.Resources.Tools.StronglyTypedResourceBuilder class, which provides support for strongly-typed resources. Beginning with the .NET Framework version 2.0, this compile-time feature encapsulates access to resources by creating classes that contain a set of static read-only (get) properties, thus making it easier to consume resources.
System.Runtime Namespace	The System.Runtime namespace contains advanced types that support diverse namespaces such as the System, Runtime, and the Security namespaces.
System.Runtime.Caching Namespace	The System.Runtime.Caching namespace contains types that let you implement caching in NET Framework applications.
System.Runtime.Caching.Configuration Namespace	The System.Runtime.Caching.Configuration namespace contains configuration handler classes for the .NET Framework caching feature.
System.Runtime.Caching.Hosting Namespace	The types in the System.Runtime.Caching.Hosting namespace support .NET Framework hosting environments that use the caching features in ASP.NET.
System.Runtime.CompilerServices Namespace	The System.Runtime.CompilerServices namespace provides functionality for compiler writers who use managed code to specify attributes in metadata that affect the run-time behavior of the common language runtime.
System.Runtime.ConstrainedExecution Namespace	The System.Runtime.ConstrainedExecution namespace defines a set of types that enumerate and define a contract for reliability between the author of some code, and the developers who take a dependency on that code. The types in the System.Runtime.ConstrainedExecution namespace are intended for use in constrained execution regions (CERs).
System.Runtime.DesignerServices Namespace	The System.Runtime.DesignerServices namespace provides classes that support application and component designers in integrated development environments.
System.Runtime.DurableInstancing Namespace	This namespace contains classes that are used by the Windows Communication Foundation (WCF) infrastructure to implement a persistence provider.
System.Runtime.ExceptionServices Namespace	The System.Runtime.ExceptionServices namespace provides classes for advanced exception handling.
System.Runtime.Hosting Namespace	The System.Runtime.Hosting namespace contains advanced types that are used in application activation within application domains.
System.Runtime.InteropServices Namespace	The System.Runtime.InteropServices namespace provides a wide variety of members that support COM interop and platform invoke services. If you are unfamiliar with these services, see [Interoperating with Unmanaged Code](~/docs/framework/interop/index.md).
System.Runtime.InteropServices.ComTypes Namespace	The System.Runtime.InteropServices.ComTypes namespace contains managed types that correspond to types used by COM interop.
System.Runtime.InteropServices.CustomMarshalers Namespace	Provides internal marshaling support for the .NET Framework.
System.Runtime.InteropServices.Expando Namespace	The System.Runtime.InteropServices.Expando namespace contains the IExpando interface which allows modification of an object by adding or removing its members.
System.Runtime.InteropServices.WindowsRuntime Namespace	The System.Runtime.InteropServices.WindowsRuntime namespace contains classes that support interoperation between managed code and the Windows Runtime, and that enable the creation of Windows Runtime types with managed code.
System.Runtime.Remoting Namespace	The System.Runtime.Remoting namespace provides classes and interfaces that allow developers to create and configure distributed applications. Some of the more important classes of the System.Runtime.Remoting namespace are the System.Runtime.Remoting.RemotingConfiguration class, the System.Runtime.Remoting.RemotingServices class, and the System.Runtime.Remoting.ObjRef class.
System.Runtime.Remoting.Activation Namespace	The System.Runtime.Remoting.Activation namespace provides classes and objects that support server and client activation of remote objects.
System.Runtime.Remoting.Channels Namespace	The System.Runtime.Remoting.Channels namespace contains classes that support and handle channels and channel sinks, which are used as the transport medium when a client calls a method on a remote object.
System.Runtime.Remoting.Channels.Http Namespace	The System.Runtime.Remoting.Channels.Http namespace contains channels that use the HTTP protocol to transport messages and objects to and from remote locations. By default, the HTTP channels encode objects and method calls in SOAP format for transmission, but other encoding and decoding formatter sinks can be specified in the configuration properties of a channel. One of the most important classes of the System.Runtime.Remoting.Channels.Http namespace is the System.Runtime.Remoting.Channels.Http.HttpChannel class.
System.Runtime.Remoting.Channels.Ipc Namespace	The System.Runtime.Remoting.Channels.Ipc namespace defines a communication channel for remoting that uses the interprocess cmmunication (IPC) system of the Windows operating system. Because it does not use network communication, the IPC channel is much faster than the HTTP and TCP channels, but it can only be used for communication between application domains on the same physical computer.
System.Runtime.Remoting.Channels.Tcp Namespace	The System.Runtime.Remoting.Channels.Tcp namespace contains channels that use the TCP protocol to transport messages and objects to and from remote locations. By default, the TCP channels encode objects and method calls in binary format for transmission, but other encoding and decoding formatter sinks can be specified in the configuration properties of a channel. One of the most important classes of the System.Runtime.Remoting.Channels.Tcp namespace is the System.Runtime.Remoting.Channels.Tcp.TcpChannel class.
System.Runtime.Remoting.Contexts Namespace	The System.Runtime.Remoting.Contexts namespace contains objects that define the contexts all objects reside within. A context is an ordered sequence of properties that defines an environment for the objects within it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on. Multiple objects can live inside a context.
System.Runtime.Remoting.Lifetime Namespace	The System.Runtime.Remoting.Lifetime namespace contains classes that manage the lifetime of remote objects.
System.Runtime.Remoting.Messaging Namespace	The System.Runtime.Remoting.Messaging namespace contains classes used to create and transmit messages. The remoting infrastructure uses messages to communicate with remote objects. Messages are used to transmit remote method calls, to activate remote objects, and to communicate information. A message object carries a set of named properties, including action identifiers, envoy information, and parameters. Some of the most important classes of the System.Runtime.Remoting.Messaging namespace are the System.Runtime.Remoting.Messaging.AsyncResult class, the System.Runtime.Remoting.Messaging.RemotingSurrogateSelector class, and the System.Runtime.Remoting.Messaging.ReturnMessage class.
System.Runtime.Remoting.Metadata Namespace	The System.Runtime.Remoting.Metadata namespace contains classes and attributes that can be used to customize generation and processing of SOAP for objects and fields. The classes of this namespace can be used to indicate the SOAPAction header field, type output, XML element name, and the method XML namespace URI. This information is used by the SOAP serializer during SOAP generation and the Soapsuds Tool (Soapsuds.exe) during Web Services Description Language (WSDL) generation. The information specified by the attributes in this namespace can be used on the receiving end of the generated SOAP to customize processing of the remoted method calls and objects. One of the most important classes of the System.Runtime.Remoting.Metadata namespace is System.Runtime.Remoting.Metadata.SoapAttribute class. The System.Runtime.Remoting.Metadata.SoapAttribute class is nonfunctional, and can only be used as the base class for all the metadata attributes. For more information on the SOAPAction HTTP header field, see www.w3.org/tr/soap/#_Toc478383528.
System.Runtime.Remoting.Metadata.W3cXsd2001 Namespace	The System.Runtime.Remoting.Metadata.W3cXsd2001 namespace contains the XML Schema Definition (XSD) that was defined by the World Wide Web Consortium (W3C) in 2001. The XML Schema Part 2: Datatypes specification from W3C identifies format and behavior of various data types. This namespace contains wrapper classes for the data types that conform to the W3C specification. All date and time types conform to the ISO standards specification.
System.Runtime.Remoting.MetadataServices Namespace	The System.Runtime.Remoting.MetadataServices namespace contains the classes that are used by the Soapsuds Tool (Soapsuds.exe) command-line tool and the user code to convert metadata to and from XML schema for the remoting infrastructure. Some of the most important classes of this namespace are the System.Runtime.Remoting.MetadataServices.SdlChannelSink class and the System.Runtime.Remoting.MetadataServices.MetaData class.
System.Runtime.Remoting.Proxies Namespace	The System.Runtime.Remoting.Proxies namespace contains classes that control and provide functionality for proxies. A proxy is a local object that is an image of a remote object. Proxies enable clients to access objects across remoting boundaries.
System.Runtime.Remoting.Services Namespace	The System.Runtime.Remoting.Services namespace contains service classes that provide functionality to the .NET Framework. One of the most important classes of this namespace is the System.Runtime.Remoting.Services.TrackingServices class.
System.Runtime.Serialization Namespace	The System.Runtime.Serialization namespace contains classes that can be used for serializing and deserializing objects. Serialization is the process of converting an object or a graph of objects into a linear sequence of bytes for either storage or transmission to another location. Deserialization is the process of taking in stored information and recreating objects from it.
System.Runtime.Serialization.Configuration Namespace	The System.Runtime.Serialization.Configuration namespace contains classes used to read the values found in application configuration under system.xml.serialization section. The classes in this namespace are used by the serialization infrastructure to handle the configuration elements and cannot be used directly. Instead, to configure the DataContractSerializer, create an application configuration file and use the following XML elements. <system.xml.serialization><dataContractSerializer><declaredTypes><add> element for <declaredTypes><knownType> element
System.Runtime.Serialization.Formatters Namespace	The System.Runtime.Serialization.Formatters namespace provides common enumerations, interfaces, and classes that are used by serialization formatters.
System.Runtime.Serialization.Formatters.Binary Namespace	The System.Runtime.Serialization.Formatters.Binary namespace contains the System.Runtime.Serialization.Formatters.Binary.BinaryFormatter class, which can be used to serialize and deserialize objects in binary format.
System.Runtime.Serialization.Formatters.Soap Namespace	The System.Runtime.Serialization.Formatters.Soap namespace contains the System.Runtime.Serialization.Formatters.Soap.SoapFormatter class, which can be used to serialize and deserialize objects in the SOAP format. When building applications that uses the types in this namespace, you must reference the System.Runtime.Serialization.Formatters.Soap.dll assembly.
System.Runtime.Serialization.Json Namespace	Provides classes related to Json serialization.
System.Runtime.Versioning Namespace	The System.Runtime.Versioning namespace contains advanced types that support versioning in side by side implementations of the .NET Framework.
System.Security Namespace	The System.Security namespace provides the underlying structure of the common language runtime security system, including base classes for permissions.
System.Security.AccessControl Namespace	The System.Security.AccessControl namespace provides programming elements that control access to and audit security-related actions on securable objects.
System.Security.Authentication Namespace	The Authentication namespace provides a set of enumerations that describe the security of a connection. These enumerations include System.Security.Authentication.CipherAlgorithmType, System.Security.Authentication.ExchangeAlgorithmType, System.Security.Authentication.HashAlgorithmType, and System.Security.Authentication.SslProtocols.
System.Security.Authentication.ExtendedProtection Namespace	The System.Security.Authentication.ExtendedProtection namespace provides support for authentication using extended protection for applications.
System.Security.Authentication.ExtendedProtection.Configuration Namespace	The System.Security.Authentication.ExtendedProtection.Configuration namespace provides support for configuration of authentication using extended protection for applications.
System.Security.Claims Namespace	Contains classes that implement claims-based identity in the .NET Framework, including classes that represent claims, claims-based identities, and claims-based principals.
System.Security.Cryptography Namespace	The System.Security.Cryptography namespace provides cryptographic services, including secure encoding and decoding of data, as well as many other operations, such as hashing, random number generation, and message authentication. For more information, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).
System.Security.Cryptography.Pkcs Namespace	The System.Security.Cryptography.Pkcs namespace provides programming elements for Public Key Cryptography Standards (PKCS), including methods for signing data, exchanging keys, requesting certificates, public key encryption and decryption, and other security functions.
System.Security.Cryptography.X509Certificates Namespace	The System.Security.Cryptography.X509Certificates namespace contains the common language runtime implementation of the Authenticode X.509 v.3 certificate. This certificate is signed with a private key that uniquely and positively identifies the holder of the certificate.
System.Security.Cryptography.Xml Namespace	The System.Security.Cryptography.Xml namespace contains classes to support the creation and validation of XML digital signatures. The classes in this namespace implement the World Wide Web Consortium Recommendation, "XML-Signature Syntax and Processing", described at http://www.w3.org/TR/xmldsig-core/.
System.Security.Permissions Namespace	The System.Security.Permissions namespace defines classes that control access to operations and resources based on policy.
System.Security.Policy Namespace	The System.Security.Policy namespace contains code groups, membership conditions, and evidence. These three types of classes are used to create the rules applied by the common language runtime security policy system. Evidence classes are the input to security policy and membership conditions are the switches; together these create policy statements and determine the granted permission set. Policy levels and code groups are the structure of the policy hierarchy. Code groups are the encapsulation of a rule and are arranged hierarchically in a policy level.
System.Security.Principal Namespace	The System.Security.Principal namespace defines a principal object that represents the security context under which code is running. For more information, see [Role-Based Security](~/docs/standard/security/role-based-security.md).
System.Security.RightsManagement Namespace	Provides types to support rights management of application-created content such as that stored in a System.IO.Packaging.Package or System.Windows.Xps.Packaging.XpsDocument.
System.ServiceModel Namespace	Provides classes related to the service model.
System.ServiceModel.Activation Namespace	Provides classes related to service model activation.
System.ServiceModel.Activation.Configuration Namespace	Represents the configuration settings for the SMSvcHost.exe tool. This namespace represents the configuration elements that can be configured in the SMSvcHost.exe.config file. Specifically, it includes all machine-wide settings that need to be configured.
System.ServiceModel.Activities Namespace	The System.ServiceModel.Activities namespace contains classes that allow you to send messages to and receive messages from workflows. These activities are used when writing workflow services and allow you to define how messages are sent and received in a workflow.
System.ServiceModel.Activities.Activation Namespace	The System.ServiceModel.Activities.Activation namespace contains the System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory that provides instances of System.ServiceModel.Activities.WorkflowServiceHost in managed hosting environments where the host instance is created dynamically in response to incoming messages.
System.ServiceModel.Activities.Configuration Namespace	The System.ServiceModel.Activities.Configuration namespace contains classes used to configure workflow services. These classes allow you to apply service and endpoint behaviors and configure tracking.
System.ServiceModel.Activities.Description Namespace	The System.ServiceModel.Activities.Description namespace contains classes that enable you to control various behaviors related to workflow services.
System.ServiceModel.Activities.Presentation Namespace	Provides classes related to service model presentation activities.
System.ServiceModel.Activities.Presentation.Factories Namespace	Contains factories that create Receive/SendReply and Send/ReceiveReply activity pairs.
System.ServiceModel.Activities.Tracking Namespace	The System.ServiceModel.Activities.Tracking namespace contains classes used to create tracking records for a workflow service instance. Tracking records are created by created by the workflow runtime during the execution of a workflow instance, and are sent to registered tracking participants.
System.ServiceModel.Activities.Tracking.Configuration Namespace	The System.ServiceModel.Activities.Tracking.Configuration namespace contains classes used to configure tracking for service hosted workflows. These classes allow you to specify the tracking information you want your workflow service to generate.
System.ServiceModel.Channels Namespace	Provides classes related to service model channels.
System.ServiceModel.ComIntegration Namespace	Defines classes needed for integration with COM applications.
System.ServiceModel.Configuration Namespace	Provides classes related to service model configuration.
System.ServiceModel.Description Namespace	Provides classes related to the service model description.
System.ServiceModel.Diagnostics Namespace	The System.ServiceModel.Diagnostics namespace contains an enumeration that is used to configure performance counters for diagnostics purposes.
System.ServiceModel.Discovery Namespace	The System.ServiceModel.Discovery namespace contains the classes required for the creation and use of discoverable services. These classes implement the WS-Discovery protocol for Windows Communication Foundation (WCF).
System.ServiceModel.Discovery.Configuration Namespace	The System.ServiceModel.Discovery.Configuration namespace contains classes that allow you to configure discovery settings in a configuration file.
System.ServiceModel.Discovery.Version11 Namespace	The System.ServiceModel.Discovery.Version11 namespace contains the classes required for the creation and use of discoverable services. These classes implement the WS-Discovery version 1.1 protocol for Windows Communication Foundation (WCF).
System.ServiceModel.Discovery.VersionApril2005 Namespace	The System.ServiceModel.Discovery.VersionApril2005 namespace contains the classes required for the creation and use of discoverable services. These classes implement the April 2005 version of the WS-Discovery protocol for Windows Communication Foundation (WCF).
System.ServiceModel.Discovery.VersionCD1 Namespace	The System.ServiceModel.Discovery.VersionCD1 namespace contains the classes required for the creation and use of discoverable services. These classes implement the Committee Draft 1 version of the WS-Discovery protocol for Windows Communication Foundation (WCF).
System.ServiceModel.Dispatcher Namespace	Provides classes related to dispatching the service model.
System.ServiceModel.MsmqIntegration Namespace	The System.ServiceModel.MsmqIntegration namespace contains classes that relate to Microsoft Message Queuing Service (MSMQ) integration, which allows communication between MSMQ applications and Windows Communication Foundation (WCF) applications.
System.ServiceModel.PeerResolvers Namespace	The System.ServiceModel.PeerResolvers namespace contains classes that allow developers to customize and extend the Peer Name Resolution Protocol service.
System.ServiceModel.Persistence Namespace	The System.ServiceModel.Persistence namespace contains classes that allow workflow services (WCF services implemented as workflows) to be persisted into the persistence store.
System.ServiceModel.Routing Namespace	This namespace contains classes that are used to configure and manage the WCF System.ServiceModel.Routing.RoutingService.
System.ServiceModel.Routing.Configuration Namespace	This namespace contains configuration classes that are used by the Windows Communication Foundation (WCF) infrastructure to convert XML into Common Language Runtime (CLR) types. You can also manipulate these classes directly for extensibility purposes.
System.ServiceModel.Security Namespace	The System.ServiceModel.Security namespace deals with general security-related topics, for example, System.ServiceModel.Security.SecurityAlgorithmSuite.
System.ServiceModel.Security.Tokens Namespace	Deals with security tokens and certificates.
System.ServiceModel.Syndication Namespace	Provides classes related to service model syndication.
System.ServiceModel.Web Namespace	Provides classes related to using the service model on the web.
System.ServiceModel.XamlIntegration Namespace	Provides utility classes to enable the serialization of Windows Communication Foundation (WCF) entities to XAML.
System.ServiceProcess Namespace	The System.ServiceProcess namespace provides classes that allow you to implement, install, and control Windows service applications. Services are long-running executables that run without a user interface. Implementing a service involves inheriting from the System.ServiceProcess.ServiceBase class and defining specific behavior to process when start, stop, pause, and continue commands are passed in, as well as custom behavior and actions to take when the system shuts down.
System.ServiceProcess.Design Namespace	The System.ServiceProcess.Design namespace contains classes that can be used to extend design-time support for Windows services applications.
System.Speech.AudioFormat Namespace	The System.Speech.AudioFormat namespace consists of a single class, System.Speech.AudioFormat.SpeechAudioFormatInfo, which contains information about the format of the audio that is being input to the speech recognition engine, or being output from the speech synthesis engine.
System.Speech.Recognition Namespace	The System.Speech.Recognition namespace contains Windows Desktop Speech technology types for implementing speech recognition.
System.Speech.Recognition.SrgsGrammar Namespace	With the members of the System.Speech.Recognition.SrgsGrammar namespace, you can programmatically create grammars that comply with the W3C Speech Recognition Grammar Specification Version 1.0 (SRGS).
System.Speech.Synthesis Namespace	The N:System.Speech.Synthesis namespace contains classes for initializing and configuring a speech synthesis engine, for creating prompts, for generating speech, for responding to events, and for modifying voice characteristics.
System.Speech.Synthesis.TtsEngine Namespace	Supports the creation of Speech Synthesis Markup Language (SSML) based custom engines for rendering text to speech (TTS).
System.Text Namespace	The System.Text namespace contains classes that represent ASCII and Unicode character encodings; abstract base classes for converting blocks of characters to and from blocks of bytes; and a helper class that manipulates and formats System.String objects without creating intermediate instances of System.String.
System.Text.RegularExpressions Namespace	The System.Text.RegularExpressions namespace contains classes that provide access to the .NET Framework regular expression engine. The namespace provides regular expression functionality that may be used from any platform or language that runs within the Microsoft .NET Framework. In addition to the types contained in this namespace, the System.Configuration.RegexStringValidator class enables you to determine whether a particular string conforms to a regular expression pattern.
System.Threading Namespace	The System.Threading namespace provides classes and interfaces that enable multithreaded programming. In addition to classes for synchronizing thread activities and access to data (System.Threading.Mutex, System.Threading.Monitor, System.Threading.Interlocked, System.Threading.AutoResetEvent, and so on), this namespace includes a System.Threading.ThreadPool class that allows you to use a pool of system-supplied threads, and a System.Threading.Timer class that executes callback methods on thread pool threads.
System.Threading.Tasks Namespace	The System.Threading.Tasks namespace provides types that simplify the work of writing concurrent and asynchronous code. The main types are System.Threading.Tasks.Task which represents an asynchronous operation that can be waited on and cancelled, and System.Threading.Tasks.Task`1, which is a task that can return a value. The System.Threading.Tasks.TaskFactory class provides static methods for creating and starting tasks, and the System.Threading.Tasks.TaskScheduler class provides the default thread scheduling infrastructure.
System.Timers Namespace	The System.Timers namespace provides the System.Timers.Timer component, which allows you to raise an event on a specified interval.
System.Transactions Namespace	The System.Transactions namespace contains classes that allow you to write your own transactional application and resource manager. Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.
System.Transactions.Configuration Namespace	The System.Transactions.Configuration namespace contains classes that describe configuration options used by System.Transactions classes.
System.Web Namespace	The System.Web namespace supplies classes and interfaces that enable browser-server communication. This namespace includes the System.Web.HttpRequest class, which provides extensive information about the current HTTP request; the System.Web.HttpResponse class, which manages HTTP output to the client; and the System.Web.HttpServerUtility class, which provides access to server-side utilities and processes. System.Web also includes classes for cookie manipulation, file transfer, exception information, and output cache control.
System.Web.ApplicationServices Namespace	The System.Web.ApplicationServices namespace provides classes that enable you to access ASP.NET forms authentication, roles, and profiles application services as Windows Communication Foundation (WCF) services.
System.Web.Caching Namespace	The System.Web.Caching namespace provides classes for caching frequently used data on the server.
System.Web.ClientServices Namespace	The System.Web.ClientServices namespace provides classes that support access in Windows-based applications to the Microsoft Ajax authentication, roles, and profiles services.
System.Web.ClientServices.Providers Namespace	The System.Web.ClientServices.Providers namespace contains client service providers and other classes that support access in Windows-based applications to the Microsoft Ajax authentication, roles, and profile services.
System.Web.Compilation Namespace	The System.Web.Compilation namespace contains classes for generating and compiling custom file types within the ASP.NET build environment.
System.Web.Configuration Namespace	The System.Web.Configuration namespace contains classes that are used to set up ASP.NET configuration.
System.Web.Configuration.Internal Namespace	The System.Web.Configuration.Internal namespace contains configuration types intended for internal use only.
System.Web.DynamicData Namespace	The System.Web.DynamicData namespace contains classes that provide the core functionality for ASP.NET Dynamic Data. It also provides extensibility features that let you customize dynamic data behavior.
System.Web.DynamicData.Design Namespace	The System.Web.DynamicData.Design namespace contains classes that provide design-time support for the classes in the System.Web.DynamicData namespace.
System.Web.DynamicData.ModelProviders Namespace	The System.Web.DynamicData.ModelProviders namespace contains classes that define the core functionality for ASP.NET Dynamic Data providers.
System.Web.Globalization Namespace	The System.Web.Globalization namespace provides classes and interfaces for localization providers.
System.Web.Handlers Namespace	The System.Web.Handlers namespace contains HTTP handler classes that process HTTP requests to a Web server.
System.Web.Hosting Namespace	The System.Web.Hosting namespace provides the functionality for hosting ASP.NET applications from managed applications outside Microsoft Internet Information Services (IIS).
System.Web.Instrumentation Namespace	The System.Web.Instrumentation namespace contains types that provide information about current page execution, that include execution listeners and instrumentation, and that include methods that are called before and after view engine renders output.
System.Web.Mail Namespace	The classes in this namespace have been deprecated. Use the System.Net.Mail namespace instead. The System.Web.Mail namespace contains classes that enable you to construct and send messages using the CDOSYS (Collaboration Data Objects for Windows 2000) message component. The mail message is delivered either through the SMTP mail service built into Microsoft Windows 2000 or through an arbitrary SMTP server. The classes in this namespace can be used from ASP.NET or from any managed application.
System.Web.Management Namespace	The System.Web.Management namespace contains classes and interfaces for managing and monitoring the health of Web applications.
System.Web.Mobile Namespace	The System.Web.Mobile namespace contains the core capabilities, including authentication and error handling, required for building ASP.NET mobile Web applications. For information about how to develop ASP.NET mobile applications, see the www.asp.net/mobile Web site.
System.Web.ModelBinding Namespace	The System.Web.ModelBinding namespace provides classes that enable you to bind data objects to ASP.NET Web Forms server controls.
System.Web.Profile Namespace	The System.Web.Profile namespace contains classes that are used to work with ASP.NET user profiles in Web server applications.
System.Web.Query.Dynamic Namespace	The System.Web.Query.Dynamic namespace contains classes that are used to parse expressions from a System.Web.UI.WebControls.LinqDataSource control into a language-integrated query (LINQ).
System.Web.RegularExpressions Namespace	The System.Web.RegularExpressions namespace provides precompiled regular expressions that can be used to parse ASP.NET files. All members of the System.Web.RegularExpressions namespace are descendants of the System.Text.RegularExpressions.Regex class.
System.Web.Routing Namespace	The System.Web.Routing namespace provides classes that are used with URL routing, which enables you to use URLs that do not map to a physical file.
System.Web.Script Namespace	The System.Web.Script namespace contains classes that provide script resource information.
System.Web.Script.Serialization Namespace	The System.Web.Script.Serialization namespace contains classes that provide JavaScript Object Notation (JSON) serialization and deserialization for managed types. It also provides extensibility features to customize serialization behavior.
System.Web.Script.Services Namespace	The System.Web.Script.Services namespace provides attributes that let you customize Web service support for AJAX functionality in ASP.NET.
System.Web.Security Namespace	The System.Web.Security namespace contains classes that are used to implement ASP.NET security in Web server applications.
System.Web.Security.AntiXss Namespace	Contains methods that you can use to encode strings in order help you protect your application against cross-site scripting (XSS) attacks and LDAP injection attacks.
System.Web.Services Namespace	The System.Web.Services namespace consists of the classes that enable you to create XML Web services using ASP.NET and XML Web service clients. XML Web services are applications that provide the ability to exchange messages in a loosely coupled environment using standard protocols such as HTTP, XML, XSD, SOAP, and WSDL. XML Web services enable the building of modular applications within and across companies in heterogeneous environments making them interoperable with a broad variety of implementations, platforms and devices. The SOAP-based XML messages of these applications can have well-defined (structured and typed), or loosely defined parts (using arbitrary XML). The ability of the messages to evolve over time without breaking the protocol is fundamental to the flexibility and robustness of XML Web services as a building block for the future of the Web.
System.Web.Services.Configuration Namespace	The System.Web.Services.Configuration namespace consists of the classes that configure how XML Web services created using ASP.NET run.
System.Web.Services.Description Namespace	The System.Web.Services.Description namespace consists of the classes that enable you to publicly describe an XML Web service by using the Web Services Description Language (WSDL). Each class in this namespace corresponds to a specific element in the WSDL specification, and the class hierarchy corresponds to the XML structure of a valid WSDL document. For more information about WSDL, see the specification at the W3C Web site (http://www.w3.org/TR/wsdl/).
System.Web.Services.Discovery Namespace	The System.Web.Services.Discovery namespace consists of the classes that allows XML Web service clients to locate the available XML Web services on a Web server through a process called XML Web services Discovery.
System.Web.Services.Protocols Namespace	The System.Web.Services.Protocols namespace consists of the classes that define the protocols used to transmit data across the wire during the communication between XML Web service clients and XML Web services created using ASP.NET.
System.Web.SessionState Namespace	The System.Web.SessionState namespace supplies classes and interfaces that enable storage of data specific to a single client within a Web application on the server. The session-state data is used to give the client the appearance of a persistent connection with the application. State information can be stored within local process memory or, for Web farm configurations, it can be stored out of process using either the ASP.NET State service or a Microsoft SQL Server database.
System.Web.UI Namespace	The System.Web.UI namespace provides classes and interfaces that enable you to create ASP.NET server controls and ASP.NET Web pages for the user interface of your ASP.NET Web applications.
System.Web.UI.Adapters Namespace	The System.Web.UI.Adapters namespace contains the base classes for control adapters and page adapters. You can use these adapters to override the life-cycle states of pages and controls. This is useful if you want to modify a control's markup or behavior for new markup standards or for specific browsers.
System.Web.UI.DataVisualization.Charting Namespace	The System.Web.UI.DataVisualization.Charting namespace contains methods and properties for the Chart Web server control.
System.Web.UI.Design Namespace	The System.Web.UI.Design namespace contains classes that can be used to extend design-time support for ASP.NET Web pages and for Web server controls.
System.Web.UI.Design.Directives Namespace	The System.Web.UI.Design.Directives namespace contains classes that can be used to extend design-time support for ASP.NET Web page directives.
System.Web.UI.Design.MobileControls Namespace	The System.Web.UI.Design.MobileControls namespace contains classes that provide design-time support for the classes in the System.Web.UI.MobileControls namespace. For information about how to develop ASP.NET mobile applications, see the www.asp.net/mobile Web site.
System.Web.UI.Design.MobileControls.Converters Namespace	The System.Web.UI.Design.MobileControls.Converters namespace contains classes that provide design-time support for data type converters in mobile controls. For information about how to develop ASP.NET mobile applications, see the www.asp.net/mobile Web site.
System.Web.UI.Design.WebControls Namespace	The System.Web.UI.Design.WebControls namespace contains classes that can be used to extend design-time support for Web server controls.
System.Web.UI.Design.WebControls.WebParts Namespace	The System.Web.UI.Design.WebControls.WebParts namespace contains classes that provide design-time support for controls derived from classes in the System.Web.UI.WebControls.WebParts namespace.
System.Web.UI.HtmlControls Namespace	The System.Web.UI.HtmlControls namespace contains classes that allow you to create HTML server controls on a Web Forms page. HTML server controls run on the server and map directly to standard HTML tags supported by most browsers. This allows you to programmatically control the HTML elements on a Web Forms page.
System.Web.UI.MobileControls Namespace	The System.Web.UI.MobileControls namespace contains a set of ASP.NET server controls that can render your application for different mobile devices. The APIs in this namespace are obsolete. For information about how to develop ASP.NET mobile applications, see the www.asp.net/mobile Web site.
System.Web.UI.MobileControls.Adapters Namespace	The System.Web.UI.MobileControls.Adapters namespace contains classes you can use to override the life-cycle stages of a mobile control to modify its default HTML, CHTML, or WML markup or behavior for new markup standards or for specific browsers and mobile devices. The APIs in this namespace are obsolete. For information about how to develop ASP.NET mobile applications, see the www.asp.net/mobile Web site.
System.Web.UI.MobileControls.Adapters.XhtmlAdapters Namespace	The System.Web.UI.MobileControls.Adapters.XhtmlAdapters namespace contains classes you can use to override the life-cycle stages of a mobile control to modify its default XHTML markup or behavior for new markup standards or for specific browsers and mobile devices. For information about how to develop ASP.NET mobile applications, see the www.asp.net/mobile Web site.
System.Web.UI.WebControls Namespace	The System.Web.UI.WebControls namespace contains classes that allow you to create Web server controls on a Web page. Web server controls run on the server and include form controls such as buttons and text boxes. They also include special-purpose controls such as a calendar. Because Web server controls run on the server, you can programmatically control these elements. Although Web server controls are rendered as HTML, their object model does not necessarily reflect HTML syntax.
System.Web.UI.WebControls.Adapters Namespace	The System.Web.UI.WebControls.Adapters namespace contains classes that you can use to override the life-cycle stages of a Web control. The classes enable you to modify a control's markup or behavior for new markup standards or for specific browsers.
System.Web.UI.WebControls.Expressions Namespace	The System.Web.UI.WebControls.Expressions namespace provides classes that enable you to filter data in a Web page by using the System.Web.UI.WebControls.QueryExtender control.
System.Web.UI.WebControls.WebParts Namespace	The System.Web.UI.WebControls.WebParts namespace contains classes and interfaces known collectively as the Web Parts control set. You can use these classes to create Web pages whose appearance and behavior can be modified (personalized) by end users. Each user's personalized settings for a page are saved for future browser sessions.
System.Web.Util Namespace	The System.Web.Util namespace is a collection of classes that enable callback methods to be run under the scope of a transaction and that enable work to be posted to separate threads.
System.Web.WebSockets Namespace	The System.Web.WebSockets namespace contains classes that support adding WebSocket functionality to ASP.NET Web Forms applications.
System.Windows Namespace	Provides several important Windows Presentation Foundation (WPF) base element classes, various classes that support the WPF property system and event logic, and other types that are more broadly consumed by the WPF core and framework.
System.Windows.Annotations Namespace	Provides classes to support user-created annotations on content displayed in WPF document viewing controls.
System.Windows.Annotations.Storage Namespace	Provides types that define the storage architecture and mediums to save and retreive user-created annotations.
System.Windows.Automation Namespace	Provides support for Windows Presentation Foundation (WPF) UI Automation clients.
System.Windows.Automation.Peers Namespace	Defines the System.Windows.Automation.Peers.AutomationPeer base class and a set of types that derive from it and that correspond to Microsoft .NET Framework controls. Each System.Windows.Automation.Peers.AutomationPeer exposes the corresponding Microsoft .NET Framework control to Microsoft UI Automation.
System.Windows.Automation.Provider Namespace	Provides APIs for creating UI Automation providers.
System.Windows.Automation.Text Namespace	Contains enumerations that specify text formatting and related behavior for Windows Presentation Foundation (WPF) UI automation.
System.Windows.Baml2006 Namespace	Contains reader and writer classes that can consume XAML in BAML form.
System.Windows.Controls Namespace	Provides classes to create elements, known as controls, that enable a user to interact with an application. The control classes are at the core of the user's experience with any application because they allow a user to view, select, or enter data or other information.
System.Windows.Controls.Primitives Namespace	Contains base classes and controls that are intended to be used as part of other more complex controls.
System.Windows.Controls.Ribbon Namespace	Contains types that are used to create a user interface by using the Microsoft Ribbon for WPF.
System.Windows.Controls.Ribbon.Primitives Namespace	Contains types that are used as layout containers in a Microsoft Ribbon for WPF control.
System.Windows.Converters Namespace	Provides classes to support type conversion during serialization in Windows Presentation Foundation (WPF).
System.Windows.Data Namespace	Contains classes used for binding properties to data sources, data source provider classes, and data-specific implementations of collections and views.
System.Windows.Diagnostics Namespace	Provides support for Windows Presentation Foundation (WPF) XAML tooling.
System.Windows.Documents Namespace	Contains types that support System.Windows.Documents.FixedDocument, System.Windows.Documents.FlowDocument, and XML Paper Specification (XPS) document creation.
System.Windows.Documents.DocumentStructures Namespace	Provides classes to describe the structure of an System.Windows.Xps.Packaging.XpsDocument in terms of sections, paragraphs, figures, bulleted or numbered lists, and tables.
System.Windows.Documents.Serialization Namespace	Provides types that support the creation and use of run-time accessible plug-in serializers that read and write documents in different data formats.
System.Windows.Forms Namespace	The System.Windows.Forms namespace contains classes for creating Windows-based applications that take full advantage of the rich user interface features available in the Microsoft Windows operating system.
System.Windows.Forms.ComponentModel.Com2Interop Namespace	The System.Windows.Forms.ComponentModel.Com2Interop namespace contains helper classes that Visual Studio uses to display property pages while in design mode.
System.Windows.Forms.DataVisualization.Charting Namespace	The System.Windows.Forms.DataVisualization.Charting namespace contains methods and properties for the Chart Windows forms control.
System.Windows.Forms.Design Namespace	The System.Windows.Forms.Design namespace contains classes that support design-time configuration and behavior for Windows Forms components. These classes consist of designer classes that provide support for Windows Forms components, a set of design-time services; UITypeEditor classes for configuring certain types of properties, and classes for importing ActiveX controls.
System.Windows.Forms.Design.Behavior Namespace	The System.Windows.Forms.Design.Behavior namespace contains classes for creating custom user interface behavior for components at design time.
System.Windows.Forms.Integration Namespace	Contains classes that support interoperation of Windows Forms and WPF controls.
System.Windows.Forms.Layout Namespace	The System.Windows.Forms.Layout namespace contains classes for implementing layout behaviors in your form or control.
System.Windows.Forms.PropertyGridInternal Namespace	The PropertyGridInternal namespace provides internal support for the PropertyGrid control. The classes in this namespace support the .NET Framework infrastructure and are not intended to be used directly from your code.
System.Windows.Forms.VisualStyles Namespace	The System.Windows.Forms.VisualStyles namespace contains classes for rendering controls and other Windows user interface (UI) elements with visual styles in operating systems that support them.
System.Windows.Ink Namespace	Provides classes to interact with and manipulate ink on the Windows Presentation Foundation (WPF) platform.
System.Windows.Input Namespace	Provides types to support the Windows Presentation Foundation (WPF) input system. This includes device abstraction classes for mouse, keyboard, and stylus devices, a common input manager class, support for commanding and custom commands, and various utility classes.
System.Windows.Input.Manipulations Namespace	Provides functionality for monitoring and responding to a collection of manipulators as a single composite, enabling an application to track the changes to the composite instead of the individual components.
System.Windows.Input.StylusPlugIns Namespace	Provides classes that support manipulating data from a tablet pen on the Windows Presentation Foundation (WPF) platform. These classes offerlow-level control over System.Windows.Input.Stylus input and the creation of digital ink System.Windows.Ink.Stroke objects. The System.Windows.Input.StylusPlugIns.StylusPlugIn class provides a mechanism for you to implement custom behavior and apply that behavior to the stream of data coming from the stylus device for the optimal performance.
System.Windows.Input.StylusWisp Namespace	Provides classes that support manipulating data from a WISP tablet device pen on the Windows Presentation Foundation (WPF) platform.
System.Windows.Interop Namespace	Provides supporting types for interoperation between Windows Presentation Foundation (WPF) and other technologies such as Win32 APIs and provides base classes for other specific interoperation scenarios involving WPF.
System.Windows.Markup Namespace	Provides types to support XAML. Some of these types are located in WPF assemblies and are specific to WPF scenarios that involve XAML. Other types in this namespace provide support for .NET Framework XAML Services in general, and do not require referencing WPF assemblies.
System.Windows.Markup.Localizer Namespace	Provides types that assist in the localization of binary XAML (BAML) sources.
System.Windows.Markup.Primitives Namespace	Contains classes that support Extensible Application Markup Language (XAML) in Windows Presentation Foundation (WPF).
System.Windows.Media Namespace	Provides types that enable integration of rich media, including drawings, text, and audio/video content in Windows Presentation Foundation (WPF) applications.
System.Windows.Media.Animation Namespace	Provides types that support property animation functionality, including timelines, storyboards, and key frames.
System.Windows.Media.Converters Namespace	Contains classes that are used by the System.Windows.Markup.Primitives.MarkupWriter for serialization of Extensible Application Markup Language (XAML).
System.Windows.Media.Effects Namespace	Provides types that can be used to apply visual effects to bitmap images.
System.Windows.Media.Imaging Namespace	Provides types that are used to encode and decode bitmap images.
System.Windows.Media.Media3D Namespace	Contains types that support 3-D presentation in Windows Presentation Foundation (WPF) applications.
System.Windows.Media.Media3D.Converters Namespace	Contains classes that are used by the System.Windows.Markup.Primitives.MarkupWriter for serialization of Extensible Application Markup Language (XAML).
System.Windows.Media.TextFormatting Namespace	Provides types that control formatting of text, typically at a lower level than control-based text presentation or the text object model.
System.Windows.Navigation Namespace	Provides types that support navigation, including navigating between windows and navigation journaling.
System.Windows.Resources Namespace	Provides low-level classes that support the Windows Presentation Foundation (WPF) resource model and the Resources build action.
System.Windows.Shapes Namespace	Provides access to a library of shapes that can be used in Extensible Application Markup Language (XAML) or code.
System.Windows.Shell Namespace	Contains types that provide managed code access to the enhanced functionality of the Windows 7 taskbar.
System.Windows.Threading Namespace	Contains types to support the Windows Presentation Foundation (WPF) threading system.
System.Windows.Xps Namespace	Provides classes that write XPS documents to a data store or print queue.
System.Windows.Xps.Packaging Namespace	Provides types that allow applications to read and write the components of an XPS document.
System.Windows.Xps.Serialization Namespace	Provides types that support serialization of XPS documents.
System.Workflow.Activities Namespace	Provides classes related to Windows Workflow Foundation activities.
System.Workflow.Activities.Configuration Namespace	Provides classes that represent sections of the configuration file.
System.Workflow.Activities.Rules Namespace	Contains a set of classes that define the conditions and actions that form a rule.
System.Workflow.Activities.Rules.Design Namespace	Contains a set of classes that manage the Rule Set Editor and the Rule Condition Editor dialog boxes.
System.Workflow.ComponentModel Namespace	Provides classes related to the Windows Workflow Foundation component model.
System.Workflow.ComponentModel.Compiler Namespace	Provides classes related to the Windows Workflow Foundation component model compiler.
System.Workflow.ComponentModel.Design Namespace	Provides classes related to the Windows Workflow Foundation component model designers.
System.Workflow.ComponentModel.Serialization Namespace	Provides the infrastructure for managing the serialization of activities and workflows to and from extensible Application Markup Language (XAML) and CodeDOM.
System.Workflow.Runtime Namespace	Provides classes related to workflow runtime.
System.Workflow.Runtime.Configuration Namespace	Contains classes that are used to configure the workflow runtime engine.
System.Workflow.Runtime.DebugEngine Namespace	Contains classes and interfaces for use in debugging workflow instances.
System.Workflow.Runtime.Hosting Namespace	Provides classes related to Windows Workflow Foundation runtime hosting.
System.Workflow.Runtime.Tracking Namespace	Contains classes and an interface related to tracking services.
System.Xaml Namespace	Provides types that relate to XAML readers and XAML writers. This includes the default implementations of .NET Framework XAML Services and its XAML readers and XAML writers. Also contains types relevant to the XAML type system and other support types related to XAML and .NET Framework XAML Services concepts.
System.Xaml.Permissions Namespace	Contains types that specify permissions for certain XAML loading scenarios, such as loading under partial trust or loading internal types.
System.Xaml.Schema Namespace	Contains types that support extensibility of the XAML type system.
System.Xml Namespace	The System.Xml namespace provides standards-based support for processing XML.
System.Xml.Linq Namespace	Contains the classes for LINQ to XML. LINQ to XML is an in-memory XML programming interface that enables you to modify XML documents efficiently and easily.
System.Xml.Resolvers Namespace	The System.Xml.Resolvers namespace provides support for prepopulating the cache with DTDs or XML streams.
System.Xml.Schema Namespace	The System.Xml.Schema namespace contains the XML classes that provide standards-based support for XML schema definition language (XSD) schemas.
System.Xml.Serialization Namespace	The System.Xml.Serialization namespace contains classes that are used to serialize objects into XML format documents or streams.
System.Xml.Serialization.Advanced Namespace	The System.Xml.Serialization.Advanced namespace contains classes that allow you to customize the code generated from a Web Services Description Language (WSDL) document.
System.Xml.Serialization.Configuration Namespace	The System.Xml.Serialization.Configuration namespace contains classes used to read the values found in application configuration files under the [<system.xml.serialization> Element](~/docs/standard/serialization/system-xml-serialization-element.md) section.
System.Xml.XPath Namespace	The System.Xml.XPath namespace contains the classes that define a cursor model for navigating and editing XML information items as instances of the XQuery 1.0 and XPath 2.0 Data Model.
System.Xml.XmlConfiguration Namespace	The System.Xml.XmlConfiguration namespace that contains sections of XML configuration.
System.Xml.Xsl Namespace	The System.Xml.Xsl namespace provides support for Extensible Stylesheet Transformation (XSLT) transforms. It supports the W3C XSL Transformations (XSLT) Version 1.0 Recommendation (www.w3.org/TR/xslt).
System.Xml.Xsl.Runtime Namespace	Contains types that are used by the XSL transformation engine.
UIAutomationClientsideProviders Namespace	Contains a single type that maps client automation providers.
